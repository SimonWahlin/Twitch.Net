name: Release - Build & Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: build, pack & publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.301

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Tests
        run: dotnet test --no-restore --verbosity normal --logger trx --results-directory "TestResults"
      
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-results
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Publish Nuget (Twitch.Net.Shared)
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PACKAGE_NAME: Twitch.Net.Shared
          PROJECT_FILE_PATH: Twitch.Net.Shared/Twitch.Net.Shared.csproj
          NUGET_KEY: ${{secrets.NUGET_TWITCH_NET}}
          VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$

      - name: Publish Nuget (Twitch.Net.Communication)
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PACKAGE_NAME: Twitch.Net.Communication
          PROJECT_FILE_PATH: Twitch.Net.Communication/Twitch.Net.Communication.csproj
          NUGET_KEY: ${{secrets.NUGET_TWITCH_NET}}
          VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$

      - name: Publish Nuget (Twitch.Net.Api)
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PACKAGE_NAME: Twitch.Net.Api
          PROJECT_FILE_PATH: Twitch.Net.Api/Twitch.Net.Api.csproj
          NUGET_KEY: ${{secrets.NUGET_TWITCH_NET}}
          VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$

      - name: Publish Nuget (Twitch.Net.Client)
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PACKAGE_NAME: Twitch.Net.Client
          PROJECT_FILE_PATH: Twitch.Net.Client/Twitch.Net.Client.csproj
          NUGET_KEY: ${{secrets.NUGET_TWITCH_NET}}
          VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$

      - name: Publish Nuget (Twitch.Net.Pubsub)
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PACKAGE_NAME: Twitch.Net.Pubsub
          PROJECT_FILE_PATH: Twitch.Net.Pubsub/Twitch.Net.Pubsub.csproj
          NUGET_KEY: ${{secrets.NUGET_TWITCH_NET}}
          VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$

      - name: Publish Nuget (Twitch.Net.EventSub)
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PACKAGE_NAME: Twitch.Net.EventSub
          PROJECT_FILE_PATH: Twitch.Net.EventSub/Twitch.Net.EventSub.csproj
          NUGET_KEY: ${{secrets.NUGET_TWITCH_NET}}
          VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$

      - name: Publish Nuget (Twitch.Net.Lib - All above in a single package)
        uses: brandedoutcast/publish-nuget@v2.5.5
        with:
          PACKAGE_NAME: Twitch.Net.Lib
          PROJECT_FILE_PATH: Twitch.Net.Lib/Twitch.Net.Lib.csproj
          NUGET_KEY: ${{secrets.NUGET_TWITCH_NET}}
          VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$